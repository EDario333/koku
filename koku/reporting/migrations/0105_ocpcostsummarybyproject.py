# Generated by Django 2.2.11 on 2020-03-25 20:12
import django.contrib.postgres.fields.jsonb
from django.db import migrations
from django.db import models


class Migration(migrations.Migration):

    dependencies = [("reporting", "0104_ocpcostsummary")]

    operations = [
        migrations.CreateModel(
            name="OCPCostSummaryByProject",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("cluster_id", models.CharField(max_length=50, null=True)),
                ("cluster_alias", models.CharField(max_length=256, null=True)),
                ("namespace", models.CharField(max_length=253, null=True)),
                ("usage_start", models.DateField()),
                ("usage_end", models.DateField()),
                ("supplementary_usage_cost", django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ("infrastructure_raw_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                ("infrastructure_usage_cost", django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ("infrastructure_markup_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                ("supplementary_monthly_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                ("infrastructure_monthly_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
                (
                    "infrastructure_project_markup_cost",
                    models.DecimalField(decimal_places=15, max_digits=33, null=True),
                ),
                ("infrastructure_project_raw_cost", models.DecimalField(decimal_places=15, max_digits=33, null=True)),
            ],
            options={"db_table": "reporting_ocp_cost_summary_by_project", "managed": False},
        ),
        migrations.RunSQL(
            sql="""
            CREATE MATERIALIZED VIEW reporting_ocp_cost_summary_by_project AS(
                SELECT row_number() OVER(ORDER BY date(usage_start), cluster_id, cluster_alias, namespace) as id,
                    date(usage_start) as usage_start,
                    date(usage_start) as usage_end,
                    cluster_id,
                    cluster_alias,
                    namespace,
                    json_build_object('cpu', sum((supplementary_usage_cost->>'cpu')::decimal),
                                    'memory', sum((supplementary_usage_cost->>'memory')::decimal),
                                    'storage', sum((supplementary_usage_cost->>'storage')::decimal)) as supplementary_usage_cost,
                    json_build_object('cpu', sum((infrastructure_usage_cost->>'cpu')::decimal),
                                    'memory', sum((infrastructure_usage_cost->>'memory')::decimal),
                                    'storage', sum((infrastructure_usage_cost->>'storage')::decimal)) as infrastructure_usage_cost,
                    sum(infrastructure_raw_cost) as infrastructure_raw_cost,
                    sum(infrastructure_markup_cost) as infrastructure_markup_cost,
                    sum(supplementary_monthly_cost) as supplementary_monthly_cost,
                    sum(infrastructure_monthly_cost) as infrastructure_monthly_cost,
                    sum(infrastructure_project_markup_cost) as infrastructure_project_markup_cost,
                    sum(infrastructure_project_raw_cost) as infrastructure_project_raw_cost
                FROM reporting_ocpusagelineitem_daily_summary
                -- Get data for this month or last month
                WHERE date_trunc('month', usage_start) = date_trunc('month', now())
                    OR date_trunc('month', usage_start) = date_trunc('month', date_trunc('month', now()) - INTERVAL '1' DAY)
                GROUP BY date(usage_start), cluster_id, cluster_alias, namespace
            )
            ;

            CREATE UNIQUE INDEX ocp_cost_summary_by_project
            ON reporting_ocp_cost_summary_by_project (usage_start, cluster_id, cluster_alias, namespace)
            ;
            """
        ),
    ]
